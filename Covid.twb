<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <DashboardExportButton />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select month' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
        <calculation class='tableau' formula='9' />
        <range max='12' min='1' />
      </column>
    </datasource>
    <datasource caption='us-counties' inline='true' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='us-counties' name='textscan.0l09f0d13zlg8n19mkhr20h6ocm9'>
            <connection class='textscan' directory='C:/Users/kibe/Desktop/Tableau01/Covid/new/covid-19-data-master' filename='us-counties.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='us-counties-2020.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' />
            <column datatype='string' name='county' />
            <column datatype='string' name='state' />
            <column datatype='integer' name='fips' />
            <column datatype='integer' name='cases' />
            <column datatype='integer' name='deaths' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0l09f0d13zlg8n19mkhr20h6ocm9' name='us-counties-2020.csv' table='[us-counties-2020#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='string' name='county' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='integer' name='fips' ordinal='3' />
              <column datatype='integer' name='cases' ordinal='4' />
              <column datatype='integer' name='deaths' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0l09f0d13zlg8n19mkhr20h6ocm9' name='us-counties-2021.csv' table='[us-counties-2021#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='string' name='county' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='integer' name='fips' ordinal='3' />
              <column datatype='integer' name='cases' ordinal='4' />
              <column datatype='integer' name='deaths' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0l09f0d13zlg8n19mkhr20h6ocm9' name='us-counties-2022.csv' table='[us-counties-2022#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='string' name='county' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='integer' name='fips' ordinal='3' />
              <column datatype='integer' name='cases' ordinal='4' />
              <column datatype='integer' name='deaths' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0l09f0d13zlg8n19mkhr20h6ocm9' name='us-counties-2023.csv' table='[us-counties-2023#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='string' name='county' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='integer' name='fips' ordinal='3' />
              <column datatype='integer' name='cases' ordinal='4' />
              <column datatype='integer' name='deaths' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[us-counties-2020.csv_939B638513434DD0AECAE058F9EC0637]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[us-counties-2020.csv_939B638513434DD0AECAE058F9EC0637]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[us-counties-2020.csv_939B638513434DD0AECAE058F9EC0637]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[us-counties-2020.csv_939B638513434DD0AECAE058F9EC0637]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[us-counties-2020.csv_939B638513434DD0AECAE058F9EC0637]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[us-counties-2020.csv_939B638513434DD0AECAE058F9EC0637]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[us-counties-2020.csv_939B638513434DD0AECAE058F9EC0637]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% positive change' datatype='real' default-format='p0.00%' name='[% positive change (copy)_733242354691289096]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_428967904741691392]/SUM([cases])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New death cases' datatype='integer' name='[Calculation_428967904744448001]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([deaths])- LOOKUP(SUM([deaths]),-1) &gt; 0 THEN&#13;&#10;SUM([deaths])- LOOKUP(SUM([deaths]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Date(advanced)' datatype='string' name='[Calculation_428967904828571650]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(YEAR([date]))+ &quot;-&quot; + RIGHT(&quot;0&quot; + STR(MONTH([date])),2)' />
      </column>
      <column caption='New positive case 2' datatype='integer' name='[Calculation_733242354660065281]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([cases])-  LOOKUP(SUM([cases]),-1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Previous positive cases' datatype='integer' name='[Calculation_733242354667606019]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([cases])-[Calculation_733242354660065281]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% positive change 2' datatype='real' default-format='p0.00%' name='[Calculation_733242354667855876]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_733242354660065281]/SUM([cases])) /([Parameters].[Parameter 1])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New death cases2' datatype='integer' name='[Calculation_733242354673795077]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([deaths]) - LOOKUP(SUM([deaths]),-1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Previous death cases2' datatype='integer' name='[Calculation_733242354674315270]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([deaths]) - [Calculation_733242354673795077]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% death change' datatype='real' default-format='p0.0%' name='[Calculation_733242354674855943]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_733242354673795077]/SUM([deaths]))/[Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Month' datatype='integer' name='[Calculation_733242354762321931]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='Months String' datatype='string' name='[Calculation_733242354765774861]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1 THEN &apos;Jan&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2 THEN &apos;Feb&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 3 THEN &apos;Mar&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 4 THEN &apos;Apr&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 5 THEN &apos;May&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 6 THEN &apos;June&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 7 THEN &apos;July&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 8 THEN &apos;Aug&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 9 THEN &apos;Sep&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 10 THEN &apos;Oct&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 11 THEN &apos;Nov&apos;&#13;&#10;ELSE &apos;Dec&apos;&#13;&#10;END' />
      </column>
      <column caption='Us-covid19(2020-2023)' datatype='table' name='[__tableau_internal_object_id__].[us-counties-2020.csv_939B638513434DD0AECAE058F9EC0637]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[fips]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[cases]' derivation='Avg' name='[avg:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_428967904828571650]' derivation='None' name='[none:Calculation_428967904828571650:nk]' pivot='key' type='nominal' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:Calculation_428967904828571650:nk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_428967904744448001]' derivation='User' name='[usr:Calculation_428967904744448001:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_428967904744448001]' derivation='User' name='[usr:Calculation_428967904744448001:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_733242354667606019]' derivation='User' name='[usr:Calculation_733242354667606019:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Calculation_733242354660065281]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_733242354673795077]' derivation='User' name='[usr:Calculation_733242354673795077:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_733242354674315270]' derivation='User' name='[usr:Calculation_733242354674315270:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Calculation_733242354673795077]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),MONTH(Date))' hidden='true' name='[Action (YEAR(Date),MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:date:ok]' />
          <groupfilter function='level-members' level='[mn:date:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[avg:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904744448001:qk:4]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667606019:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904744448001:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:1]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354674315270:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354673795077:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='county' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='fips' />
        <field-sort-custom-order field='cases' />
        <field-sort-custom-order field='Calculation_733242354659315712' />
        <field-sort-custom-order field='deaths' />
        <field-sort-custom-order field='Table Name' />
        <field-sort-custom-order field='Calculation_428967904828571650' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select month' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
          <calculation class='tableau' formula='9' />
          <range max='12' min='1' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Us-covid19(2020-2023)' id='us-counties-2020.csv_939B638513434DD0AECAE058F9EC0637'>
            <properties context=''>
              <relation all='true' name='us-counties-2020.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='date' />
                  <column datatype='string' name='county' />
                  <column datatype='string' name='state' />
                  <column datatype='integer' name='fips' />
                  <column datatype='integer' name='cases' />
                  <column datatype='integer' name='deaths' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.0l09f0d13zlg8n19mkhr20h6ocm9' name='us-counties-2020.csv' table='[us-counties-2020#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='date' name='date' ordinal='0' />
                    <column datatype='string' name='county' ordinal='1' />
                    <column datatype='string' name='state' ordinal='2' />
                    <column datatype='integer' name='fips' ordinal='3' />
                    <column datatype='integer' name='cases' ordinal='4' />
                    <column datatype='integer' name='deaths' ordinal='5' />
                  </columns>
                </relation>
                <relation connection='textscan.0l09f0d13zlg8n19mkhr20h6ocm9' name='us-counties-2021.csv' table='[us-counties-2021#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='date' name='date' ordinal='0' />
                    <column datatype='string' name='county' ordinal='1' />
                    <column datatype='string' name='state' ordinal='2' />
                    <column datatype='integer' name='fips' ordinal='3' />
                    <column datatype='integer' name='cases' ordinal='4' />
                    <column datatype='integer' name='deaths' ordinal='5' />
                  </columns>
                </relation>
                <relation connection='textscan.0l09f0d13zlg8n19mkhr20h6ocm9' name='us-counties-2022.csv' table='[us-counties-2022#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='date' name='date' ordinal='0' />
                    <column datatype='string' name='county' ordinal='1' />
                    <column datatype='string' name='state' ordinal='2' />
                    <column datatype='integer' name='fips' ordinal='3' />
                    <column datatype='integer' name='cases' ordinal='4' />
                    <column datatype='integer' name='deaths' ordinal='5' />
                  </columns>
                </relation>
                <relation connection='textscan.0l09f0d13zlg8n19mkhr20h6ocm9' name='us-counties-2023.csv' table='[us-counties-2023#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='date' name='date' ordinal='0' />
                    <column datatype='string' name='county' ordinal='1' />
                    <column datatype='string' name='state' ordinal='2' />
                    <column datatype='integer' name='fips' ordinal='3' />
                    <column datatype='integer' name='cases' ordinal='4' />
                    <column datatype='integer' name='deaths' ordinal='5' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_56A6C69FF61C48BFA5744D793E702F3A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='USA Covid-q9 Tracker' type='sheet' worksheet='KPI Positive per Month 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='USA Covid-q9 Tracker' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Data check'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column-instance column='[__tableau_internal_object_id__].[us-counties-2020.csv_939B638513434DD0AECAE058F9EC0637]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-counties-2020.csv_939B638513434DD0AECAE058F9EC0637:qk]' pivot='key' type='quantitative' />
            <column caption='Us-covid19(2020-2023)' datatype='table' name='[__tableau_internal_object_id__].[us-counties-2020.csv_939B638513434DD0AECAE058F9EC0637]' role='measure' type='quantitative' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column-instance column='[cases]' derivation='CountD' name='[ctd:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[ctd:cases:qk]' />
              <text column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[__tableau_internal_object_id__].[cnt:us-counties-2020.csv_939B638513434DD0AECAE058F9EC0637:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B9BD8C8E-AE45-4445-AB00-28ABCBBFC1C0}' />
    </worksheet>
    <worksheet name='Deaths per month'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select month' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
              <calculation class='tableau' formula='9' />
              <range max='12' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New death cases' datatype='integer' name='[Calculation_428967904744448001]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([deaths])- LOOKUP(SUM([deaths]),-1) &gt; 0 THEN&#13;&#10;SUM([deaths])- LOOKUP(SUM([deaths]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New death cases2' datatype='integer' name='[Calculation_733242354673795077]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths]) - LOOKUP(SUM([deaths]),-1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='% death change' datatype='real' default-format='p0.0%' name='[Calculation_733242354674855943]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_733242354673795077]/SUM([deaths]))/[Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_428967904744448001]' derivation='User' name='[usr:Calculation_428967904744448001:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_733242354674855943]' derivation='User' name='[usr:Calculation_733242354674855943:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Calculation_733242354673795077]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354674855943:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904744448001:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</cols>
        <pages>
          <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{FBAE6EA0-E505-4540-ACEF-A99A7B10E551}' />
    </worksheet>
    <worksheet name='KPI Deaths per Month 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>Deaths per month</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'><![CDATA[<[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[attr:Calculation_733242354765774861:nk]>]]></run>
            <run>Æ&#10;</run>
            <run fontsize='12'><![CDATA[<[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354674855943:qk:2]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select month' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
              <calculation class='tableau' formula='9' />
              <range max='12' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New death cases' datatype='integer' name='[Calculation_428967904744448001]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([deaths])- LOOKUP(SUM([deaths]),-1) &gt; 0 THEN&#13;&#10;SUM([deaths])- LOOKUP(SUM([deaths]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New death cases2' datatype='integer' name='[Calculation_733242354673795077]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths]) - LOOKUP(SUM([deaths]),-1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='% death change' datatype='real' default-format='p0.0%' name='[Calculation_733242354674855943]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_733242354673795077]/SUM([deaths]))/[Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Month' datatype='integer' name='[Calculation_733242354762321931]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Months String' datatype='string' name='[Calculation_733242354765774861]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1 THEN &apos;Jan&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2 THEN &apos;Feb&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 3 THEN &apos;Mar&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 4 THEN &apos;Apr&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 5 THEN &apos;May&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 6 THEN &apos;June&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 7 THEN &apos;July&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 8 THEN &apos;Aug&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 9 THEN &apos;Sep&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 10 THEN &apos;Oct&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 11 THEN &apos;Nov&apos;&#13;&#10;ELSE &apos;Dec&apos;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_733242354765774861]' derivation='Attribute' name='[attr:Calculation_733242354765774861:nk]' pivot='key' type='nominal' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_733242354762321931]' derivation='Count' name='[cnt:Calculation_733242354762321931:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_428967904744448001]' derivation='User' name='[usr:Calculation_428967904744448001:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_733242354673795077]' derivation='User' name='[usr:Calculation_733242354673795077:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_733242354674855943]' derivation='User' name='[usr:Calculation_733242354674855943:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Calculation_733242354673795077]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[cnt:Calculation_733242354762321931:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904744448001:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354673795077:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_56A6C69FF61C48BFA5744D793E702F3A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]'>
            <groupfilter count='12' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[mn:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (YEAR(Date),MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904744448001:qk:2]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <tooltip column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904744448001:qk:2]' />
              <tooltip column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354673795077:qk:1]' />
              <tooltip column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354674855943:qk:2]' />
              <tooltip column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[cnt:Calculation_733242354762321931:qk]' />
              <tooltip column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[attr:Calculation_733242354765774861:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904744448001:qk:2]</cols>
        <pages>
          <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{262E4445-6EE7-4803-B054-E7E84516BC54}' />
    </worksheet>
    <worksheet name='KPI Positive per Month 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>Positive per month</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'><![CDATA[<[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[attr:Calculation_733242354765774861:nk]>]]></run>
            <run>Æ&#10;</run>
            <run fontsize='12'><![CDATA[<[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667855876:qk:2]>]]></run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select month' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
              <calculation class='tableau' formula='9' />
              <range max='12' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New positive case 2' datatype='integer' name='[Calculation_733242354660065281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])-  LOOKUP(SUM([cases]),-1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='% positive change 2' datatype='real' default-format='p0.00%' name='[Calculation_733242354667855876]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_733242354660065281]/SUM([cases])) /([Parameters].[Parameter 1])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Month' datatype='integer' name='[Calculation_733242354762321931]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Months String' datatype='string' name='[Calculation_733242354765774861]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1 THEN &apos;Jan&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2 THEN &apos;Feb&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 3 THEN &apos;Mar&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 4 THEN &apos;Apr&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 5 THEN &apos;May&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 6 THEN &apos;June&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 7 THEN &apos;July&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 8 THEN &apos;Aug&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 9 THEN &apos;Sep&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 10 THEN &apos;Oct&apos;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 11 THEN &apos;Nov&apos;&#13;&#10;ELSE &apos;Dec&apos;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_733242354765774861]' derivation='Attribute' name='[attr:Calculation_733242354765774861:nk]' pivot='key' type='nominal' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_733242354762321931]' derivation='Count' name='[cnt:Calculation_733242354762321931:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_733242354667855876]' derivation='User' name='[usr:Calculation_733242354667855876:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Calculation_733242354660065281]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667855876:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:5]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]'>
            <groupfilter count='12' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[mn:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667855876:qk:2]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]' value='24' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <tooltip column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[cnt:Calculation_733242354762321931:qk]' />
              <tooltip column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[attr:Calculation_733242354765774861:nk]' />
              <tooltip column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667855876:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667855876:qk:2]</cols>
        <pages>
          <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{2EA71BF2-B0A2-4133-86CE-E6158EAF7073}' />
    </worksheet>
    <worksheet name='New death cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New death cases' datatype='integer' name='[Calculation_428967904744448001]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([deaths])- LOOKUP(SUM([deaths]),-1) &gt; 0 THEN&#13;&#10;SUM([deaths])- LOOKUP(SUM([deaths]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date(advanced)' datatype='string' name='[Calculation_428967904828571650]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([date]))+ &quot;-&quot; + RIGHT(&quot;0&quot; + STR(MONTH([date])),2)' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_428967904828571650]' derivation='None' name='[none:Calculation_428967904828571650:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_428967904744448001]' derivation='User' name='[usr:Calculation_428967904744448001:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904744448001:qk]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:Calculation_428967904828571650:nk]</cols>
      </table>
      <simple-id uuid='{C821E4C7-5CB9-4F00-8C8B-5D66D60B7487}' />
    </worksheet>
    <worksheet name='New positive cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold'>New Positive cases</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date(advanced)' datatype='string' name='[Calculation_428967904828571650]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([date]))+ &quot;-&quot; + RIGHT(&quot;0&quot; + STR(MONTH([date])),2)' />
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_428967904828571650]' derivation='None' name='[none:Calculation_428967904828571650:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <tooltip column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:Calculation_428967904828571650:nk]</cols>
      </table>
      <simple-id uuid='{32CFD06C-8813-4779-9849-DAC3847E8A15}' />
    </worksheet>
    <worksheet name='New positive cases per month'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='% positive change' datatype='real' default-format='p0.00%' name='[% positive change (copy)_733242354691289096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_428967904741691392]/SUM([cases])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New positive case 2' datatype='integer' name='[Calculation_733242354660065281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])-  LOOKUP(SUM([cases]),-1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Previous positive cases' datatype='integer' name='[Calculation_733242354667606019]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])-[Calculation_733242354660065281]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% positive change (copy)_733242354691289096]' derivation='User' name='[usr:% positive change (copy)_733242354691289096:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Calculation_428967904741691392]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_733242354667606019]' derivation='User' name='[usr:Calculation_733242354667606019:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Calculation_733242354660065281]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:\% positive change (copy)_733242354691289096:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667606019:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]' value='185' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</cols>
        <pages>
          <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{F5AA425F-32A3-4D05-8A68-CE4B7E44DF80}' />
    </worksheet>
    <worksheet name='New positive in months'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New death cases' datatype='integer' name='[Calculation_428967904744448001]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([deaths])- LOOKUP(SUM([deaths]),-1) &gt; 0 THEN&#13;&#10;SUM([deaths])- LOOKUP(SUM([deaths]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date(advanced)' datatype='string' name='[Calculation_428967904828571650]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([date]))+ &quot;-&quot; + RIGHT(&quot;0&quot; + STR(MONTH([date])),2)' />
            </column>
            <column caption='New positive case 2' datatype='integer' name='[Calculation_733242354660065281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])-  LOOKUP(SUM([cases]),-1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Previous positive cases' datatype='integer' name='[Calculation_733242354667606019]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])-[Calculation_733242354660065281]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New death cases2' datatype='integer' name='[Calculation_733242354673795077]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths]) - LOOKUP(SUM([deaths]),-1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Previous death cases2' datatype='integer' name='[Calculation_733242354674315270]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths]) - [Calculation_733242354673795077]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_428967904828571650]' derivation='None' name='[none:Calculation_428967904828571650:nk]' pivot='key' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:Calculation_428967904828571650:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_428967904744448001]' derivation='User' name='[usr:Calculation_428967904744448001:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_733242354667606019]' derivation='User' name='[usr:Calculation_733242354667606019:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Calculation_733242354660065281]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_733242354673795077]' derivation='User' name='[usr:Calculation_733242354673795077:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_733242354674315270]' derivation='User' name='[usr:Calculation_733242354674315270:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Calculation_733242354673795077]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667606019:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904744448001:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354673795077:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354674315270:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667606019:qk] + ([federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354674315270:qk] + ([federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904744448001:qk] + [federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354673795077:qk])))</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</cols>
      </table>
      <simple-id uuid='{772B907C-3892-4042-ABEA-46FE87D5DC27}' />
    </worksheet>
    <worksheet name='Positive Cases per month'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='% positive change' datatype='real' default-format='p0.00%' name='[% positive change (copy)_733242354691289096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_428967904741691392]/SUM([cases])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[% positive change (copy)_733242354691289096]' derivation='User' name='[usr:% positive change (copy)_733242354691289096:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Calculation_428967904741691392]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:\% positive change (copy)_733242354691289096:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:5]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</cols>
        <pages>
          <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{178DB344-6AAF-41BB-A60B-70FDB4DB2E88}' />
    </worksheet>
    <worksheet name='Positive cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='Date(advanced)' datatype='string' name='[Calculation_428967904828571650]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([date]))+ &quot;-&quot; + RIGHT(&quot;0&quot; + STR(MONTH([date])),2)' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_428967904828571650]' derivation='None' name='[none:Calculation_428967904828571650:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:Calculation_428967904828571650:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{6A585161-8AE5-4B90-AB43-4203547A38A1}' />
    </worksheet>
    <worksheet name='States'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_56A6C69FF61C48BFA5744D793E702F3A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (YEAR(Date),MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:5]</cols>
      </table>
      <simple-id uuid='{92869B59-524F-4328-9E7C-CCF196236F5E}' />
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Positive cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Longitude (generated)]' field-type='quantitative' max='33500192.394169167' min='20783050.510901295' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Latitude (generated)]' field-type='quantitative' max='8796339.0865535755' min='841668.75933977403' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.029999999329447746' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]' />
              <size column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]' />
              <lod column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Latitude (generated)]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7B6EBA77-AA1D-4696-B5E2-AD6E65089541}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='950' maxwidth='1500' minheight='950' minwidth='1500' sizing-mode='fixed' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='13' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C0BA1135-4565-4EB7-8ACA-C4CD932488AE}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='USA Covid-q9 Tracker'>
      <style />
      <size maxheight='950' maxwidth='1400' minheight='950' minwidth='1400' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select month' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
          <calculation class='tableau' formula='9' />
          <range max='12' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='92105' id='7' param='horz' type-v2='layout-flow' w='98858' x='571' y='7053'>
            <zone h='92105' id='5' type-v2='layout-basic' w='98858' x='571' y='7053'>
              <zone h='46053' id='3' name='KPI Positive per Month 2' w='27618' x='571' y='7053'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46052' id='10' name='KPI Deaths per Month 2' w='27618' x='571' y='53106'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='92105' id='11' name='map' w='38411' x='28189' y='7053'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='92105' id='12' name='States' w='32829' x='66600' y='7053'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='6211' id='13' type-v2='text' w='89429' x='571' y='842'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>USA Covid-19 Tracker</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6211' id='14' type-v2='dashboard-object' w='9429' x='90000' y='842'>
            <button action='' button-click-action-metadata='pdf'>
              <export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{4D118DE6-3BAF-4CF6-A53D-FA98E145652C}&quot;</export-button-action>
              <button-visual-state>
                <image-path>C:/Users/kibe/Desktop/Tableau01/Covid/download.jpg</image-path>
                <tooltip-text>Click to download</tooltip-text>
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone count='1' h='12526' id='8' name='KPI Positive per Month 2' name1='KPI Deaths per Month 2' synchronized='1' type-v2='currpage' w='8714' x='17286' y='7789' />
        <zone h='7474' id='9' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='9071' x='17143' y='20000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98316' id='25' param='vert' type-v2='layout-flow' w='98858' x='571' y='842'>
                <zone forceUpdate='true' h='6211' id='13' type-v2='text' w='89429' x='571' y='842'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>USA Covid-19 Tracker</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6211' id='14' type-v2='dashboard-object' w='9429' x='90000' y='842'>
                  <button action='' button-click-action-metadata='pdf'>
                    <export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{4D118DE6-3BAF-4CF6-A53D-FA98E145652C}&quot;</export-button-action>
                    <button-visual-state>
                      <image-path>C:/Users/kibe/Desktop/Tableau01/Covid/download.jpg</image-path>
                      <tooltip-text>Click to download</tooltip-text>
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46053' id='3' is-fixed='true' name='KPI Positive per Month 2' w='27618' x='571' y='7053'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92105' id='11' is-fixed='true' name='map' w='38411' x='28189' y='7053'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92105' id='12' is-fixed='true' name='States' w='32829' x='66600' y='7053'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7474' id='9' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='9071' x='17143' y='20000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46052' id='10' is-fixed='true' name='KPI Deaths per Month 2' w='27618' x='571' y='53106'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='1' h='12526' id='8' name='KPI Positive per Month 2' name1='KPI Deaths per Month 2' synchronized='1' type-v2='currpage' w='8714' x='17286' y='7789'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4D118DE6-3BAF-4CF6-A53D-FA98E145652C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' show-side-pane='false' source-height='37'>
    <window class='worksheet' name='Data check'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0853E363-4DB3-4FFB-8437-EE05A5E8FDD4}' />
    </window>
    <window class='worksheet' name='Positive cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[my:date:ok]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:Calculation_428967904828571650:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{85936314-5DF2-40D1-9A12-5989EFE6D6D2}' />
    </window>
    <window class='worksheet' name='New positive cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:Calculation_428967904828571650:nk]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{057F9F23-1F6E-490D-BF55-E7D870DA1F29}' />
    </window>
    <window class='worksheet' name='New death cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:Calculation_428967904828571650:nk]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8B2B163-F890-4B5C-9309-C64379DF9A49}' />
    </window>
    <window class='worksheet' maximized='true' name='States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB104A86-ED49-4CA6-8944-620397285FBA}' />
    </window>
    <window class='worksheet' name='New positive cases per month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2020</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F1570F1-B2B5-40F2-B352-65CC4F52E327}' />
    </window>
    <window class='worksheet' name='New positive in months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[my:date:ok]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:Calculation_428967904828571650:nk]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[tmn:date:qk]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE2D9573-54AD-49F1-A402-43FBE6F30231}' />
    </window>
    <window class='worksheet' name='Positive Cases per month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]' type='filter' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2022</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB6AC101-E876-4971-85FF-AF4E5684E3AA}' />
    </window>
    <window class='worksheet' name='Deaths per month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2021</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61546D78-8AAB-4D28-9F73-F469EA3C1737}' />
    </window>
    <window class='worksheet' name='KPI Deaths per Month 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2020</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:Calculation_733242354765774861:nk]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE6CC5F9-2543-4AC0-AB86-B71297B30F0B}' />
    </window>
    <window class='worksheet' name='KPI Positive per Month 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2020</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:Calculation_733242354765774861:nk]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{432A9005-B657-4870-A557-AB494F0313E1}' />
    </window>
    <window class='dashboard' name='USA Covid-q9 Tracker'>
      <viewpoints>
        <viewpoint name='KPI Deaths per Month 2'>
          <current-page>
            <multibucket>
              <bucket>2022</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI Positive per Month 2'>
          <current-page>
            <multibucket>
              <bucket>2022</bucket>
            </multibucket>
          </current-page>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667855876:qk:2]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[cnt:Calculation_733242354762321931:qk]</field>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</field>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</field>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[attr:Calculation_733242354765774861:nk]</field>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667855876:qk:2]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>100844</value>
                  <value>12</value>
                  <value>2022</value>
                  <value>&quot;Sep&quot;</value>
                  <value>0.0053647838024358969</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667855876:qk:2]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[cnt:Calculation_733242354762321931:qk]</field>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</field>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</field>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[attr:Calculation_733242354765774861:nk]</field>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667855876:qk:2]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>97583</value>
                  <value>11</value>
                  <value>2022</value>
                  <value>&quot;Sep&quot;</value>
                  <value>-0.0023244778201712288</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667855876:qk:2]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[cnt:Calculation_733242354762321931:qk]</field>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</field>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</field>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[attr:Calculation_733242354765774861:nk]</field>
                    <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354667855876:qk:2]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>100952</value>
                  <value>10</value>
                  <value>2022</value>
                  <value>&quot;Sep&quot;</value>
                  <value>0.0051373144246679358</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='States'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{A3A00F59-4A52-4FBA-9CAE-FF786DECFDF5}' />
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:county:nk]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]</field>
            <field>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E3560582-69B0-4CBC-9116-0CE6EA7D3E5C}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{13D563AC-7A66-468F-B7EA-858B0E85BE79}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='46' name='Data check' width='84'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deaths per month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='KPI Deaths per Month 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dWXAcV37n+29lZmXtGwqFHSAAggBBANwAUtxEihKphZJabtvdtjs8jjsz
      MffGhCPm0Q/3SXEf5sExMTPh8Hg8ExM9Xnra9vTtltottSiJ4r6DIEESxEaC2HegFlShqrJy
      mwdQ1NLU0hSIpZCfNxQKWScL+as85+S/TtpM0zSxWDYoYbUbYLGsJisAlg3NCoBlQ7MCYNnQ
      rABYNjQrAJYNzQqAZUOzAmDZ0KwAWDY0KwCWDc0KgGVDswJg2dCsAFg2NCsAlg3NCoBlQ7MC
      YNnQrABYNjQrAJYNzQqAZUOzAvCUdF3HMIzVboblO7IC8JQMw8BaT2D9swJg2dCsAFg2tDUY
      gGH+93/4G3qTq90Oy0awBgNgsawcabUb8HVMU6P/0ntcuDNKWpPYtOMQh/c1ETQX6Lx7B0XJ
      0XO3hwVCHHz9DdqqgkzceIf7wZc5UufBNE26L/0SreYVWopFBjpOceHmAElNoqJ5Py/uayEk
      LnClc4iaijC9V04xGznALtcg04F97N8SQsBgpus8PfYmjmyNrPZbYllmazoAkEMON/P7//IN
      fGKW6+dP0/+wiD3VErHRQeaDu/jBvzmKbfQyP7k1QFtVK2oqyoJTf7yFdDKKljMwTRFnuJbv
      /1/H8Ytp2k9dpG+8hH2VIsm5ITrGhghte4O3GiKkJxX6bnYRrz5EiBjdQwole52r+D5YnpU1
      HgAXbnGOM+9eJp7JsRDLsSXYgoEfZ1EVrVsb8EoihAvxCMrXbkkQBRy2FOd/+Y9E0wrJ2RSV
      xU1Q6QHNpKDxIPsai7ABYqgcj3OSaDSNyxYn63FR5HOvzC5bVtTaC4BuYJP8uJ1A/DYnryY4
      +PLrRNwweOM6s7rO08y+ZxP3uXBlipajr1HstTFy4xIj5qMLWZ4iaov92B49V3QF2Vzgomdy
      GqdzCo+3Aq9LXKYdtKwla2MQbKhkFBVDV5js7iFVWkmBHYjPoJbUUVkUwmFmmZmaJ/cNm5Ls
      Mpl0Bl3XWJwdZHAqC4CeiaH7q6gsKUAmy9xsFOXTC7m2L23EJlFWV87Cg0EGx2cIVVcgf/k5
      lrywNs4AuRnO//wk3bMpnMFKjr62DS9glrRQdO4d/vovdXyFZYREJ65v2FSkYRfKz/6Jv7wq
      4i+qxisvfXI7ArUEk+/y3//yHL7icgp0CfFrDmrRX8XOwGVOxrfwJ2F52XbVsrbYrPsDPJmp
      Zxm+8B5DtW/xQpX9N36vqiqCICCKVtdoPVsbZ4A1JpucoP3MWYZyVbx15DcPfkv+sM4AT6Cr
      GWJzMWzeAsK+J09/WmeA/GAF4ClZAcgPa2MWyGJZJVYALBvaqgyCk6N3uNIz9fhnR2E1bc11
      eOQn5VFjfmgCPVJEkccqR7Asr1UJQHy8h8HFMp5vCC81whtA+spzkc5M/wMUl9cKgGXZrc40
      qCBTWF7Ltm3lX3jY0LJEpyeZW8hi94YpLynE+WgWMrswzf3YNJrNQUlVFSGXhGmmmZ1SCQZN
      JifncEU24VNnSMnFRLwSpmmyMD+B6Skh4LSxGJ1iai5BzhDwhYspKQxgR2U+vojX42JhZoxF
      e4SwfRHFEaHQawdMlIVZEvgp8lsBzDdr5zqAoTE1cJe7A/MIIiwmuxlt3McLTYVAkqG+NIsO
      GSU1z93+eY6f2ENQmODS+w8pqteYTdlp8lWSuXeSO4U/4M1mPwD97R+ibf0D9paLDHZ3MJqy
      I9p0FnqG2XHwAPXBDB2dPZQ5FXonM5Q1tUGmk3vJBo49vxkHCg/brzNT+ZwVgDy0OgFQFug4
      8xNGLzsAKNr2PCf2NTA+OkFJ00GqgxLKXB+/ujHAgaZCwMWmphb2VpdgU1Nc++D/p3ushQNV
      MDf9kFDbqxzfV4FHlhj+ipcUJJmalgNUICGQ48HVDmYSCeqDMsQG6HJt5+VXmgl6ZLLzCr3X
      eplLVlNqm2dQdbE94luxt8eyclYnAA4/ra8e4/f2ftYFUlLjDNzpZH5wno5HU+s2X/2j4jcJ
      l9uBaLOB7KOqPMStWBKqoLC8hV07qvF8Q7Garsa4d+Us92eS5HSN1Gyc4mA9bJLBV8Oh1kYK
      vEuBdAeLKPI9ZHo2ilOcx+UJEvyKC2KW9W3NdIEEwUlBVR2tR3/IlvDnyw++XOevEZ2L463z
      AAkESUb6FpWaSnyQUbWa7/3hDnyyyeDlT+j7dO8lCbvtcxuRXNSVejk5Nk3QP4kz3Ip7zbxT
      luW0Zv6tkuylrECm/eIVhJ3VCLkEA3MSx/bXYhN1YhPjjOYWiA/d5mamgbeqn1wX6i0oIjbS
      z5AvTHpmgGt9SVq3gs0mYiRnGJ+cQEqNc72jF2lv/Ve0RsBXU0fxjdNcjTo5/GrYumCSp8S3
      33777ZV+UVPXkLwRigOfdStsgki4tBw5PcG93gFmkybVDfVEfA6w68SGB+kfHCNlL+foC22E
      HSJgoOtOIqUBPi1IcIdL0Md76BmcIuetZndjEaHCcsLBCG5zgu6eQRalArZta6CoqJCI34lu
      ihSEgjjs4ufa48aX7uSetI+DWwK/EQDDMLDZbAiCFY31zKoF+gpGdoYLv7xA5MT32eb7zYPc
      qgXKD9bH1xMsRh/yq5++S6puzxMPfkv+sM4AT8k6A+QH6+PNsqGtmVmg9ej2gykS6aUrFXu2
      luN1Wd8dXm+sAHwHPz/XQ9fQHAB/8e9etQKwDq2jLpDKw5u/5j//f3/N3Wjms4dNnfGOD/mL
      //jv+aB7YVleaebuR5x/kFqWbVnWtnUUANDFIDu22Onujz5eHMtUEwzMiDRVB1DU5blji6Ep
      5DRrbmAjWHddIH9dI4n+Xub3llMomGTjUTIOmWLRw6crqi+M3+XjU5cZj2cIVu/ipaMHKffD
      +MN+0rYIcrSds0N2Xj72AmEhyvUzH9E5nCDSsI9jz+8C0yA53ccHnXfoj8L2Q8c52FzJE7+v
      Y1nX1l0AcGxia+V5+oYyhGuczM1M4vSU48sNPX5KVjHZfeKP+Z2wi/Hb5+jsuE3w8HbSiRl6
      e26hFTXzvTdaCMo5Lv3sPVL1L/N/nygmMTeDoOtomRTDI1HeOvEHvGSb5t3zd5mvjFAasgri
      8s36CwBQULmZ4aEBstVNRKfH8dW3YR/67PeBcJjBG2e5Fc+QTcZRQnWoGqArZDxbeP2FFjyS
      gJkeYiJTy7GWSmQRIiUVAChuP8179lMT9oDiI+j3I1qXS/LSujyp+0LlyNo484kRJuZL2VT6
      +cK4FB0fnyYVqqN17z5aW7bgFVUMA5C81NSU4xQf7baRQxPd2Nflu2BZDuvyXy97gwQcdoYv
      n0Vp2EH4C+exGHMLRTQ1baGytBBRTaN+ersAm21phz+tfPZUUcRDHkwk0A2d9GKSbE7HsnGs
      yy4QkouqQpl/vJHhlReDX/plmKrSKO/9/d9hd7spcIsYNv9XbChA855NXDr/SzqzBr6yBg7t
      b3vWrbesIeuoFshEU1VMRCS7iKnlyCg6To8LEdBzGVSbA6ddQFezZDI5DJuA7JDBNJFlGUP7
      7O9tj7ZpGgZKNkNOMxDtDpwOGfQcms2OQxLANFBUDbtkRxA++9KMqqq8/T/PfeFC2KaSL4fR
      statowCsLaqq8vGNQaZjiwD8zvNbCfm+afF2y1pjBeApWdWg+WFdDoItluViBcCyoa3PWaA1
      4r+8087ARHy1m2H5DvIvAFqC7rtDuMs3s6nI+xv3v/s2MrFxppIOKqrC6Ml55pMmRSWR37hg
      Nh1NMTRlBWA9y7sukDLRyan2u9ztvE96GYpDk9OD3Ol6QNa6PpaX8usMYGTo75pj56HnUEfv
      M59oxhNaWmQrm5gnY9rIptOYgpNguACX3YauZFE0sIsq0biCPxTC7vJTINmx5nfyX14FQE9N
      MaCGOVQZYXhmiNlonKpQBID+M/9Ip1BHUE+SzuQI1rTy/J560qMP6BmdAz3JZMbPvv17ccxc
      59pEOa8ea1jlPbI8a3nUBTKIT81hLwjgdfkoD0mMTM8//q0guqjdeYgTb/0ub728D23uAdPx
      LJBhoOchYkkLb756mKpC9+rtgmXF5U0ATD3H8PAgi/EFHvT3Ec0oDNzuI/5oHCAIMj6/B0kQ
      cAUKCXkcpBezgEx1y252bavBbReeatBsWb/yJgBabpH5mTmwKUyMjTG2YKOSYbqmtd94rqGp
      5HQVWbYDInZJwpY374Tlt5E3YwAl/pAF525efW0ffhHAJPsA/qFzkOdKtmAYGsnYPAlsjN27
      TFQvZlfYjbq42i23rKa8CYCaUqnY3fzo4Aew4ahtpWVklEUDDC3FnQsneaBrBKuaOHp0N0HZ
      RtIXpAi+MOPjDJRQYfgRAIcvTFmp8TX3MLOsZxumGK77/Z+gHvxjdixTxfKXy6Et61PenAG+
      icMfQlrmif0/+9FBDNMaNq9nG+YMsNyscuj8YPVsLRvahukCPQsPxqOkFatIaD2zAvAd/N3J
      29YgeJ3Lyy5QNj7Nez/+c/7h4gCfDXBM9MQI7//0v/LffnYda/rfAnkaAFM3CUaCxAdHSD5e
      RddkbmISucAPqRzLs4yuZb3L3y6Qt5wWdZy7MwYHiwVMI8dMfIFgQTH2maWnmLko106foX8q
      gc0Zoe2FF9la4mGq5xKzvp1sr/AAJonBmzygltaa0KrukmX55eUZYInMlrbNDN+8j2qCpiwS
      i2UoKg1/VvCWmMWoaOPEW7/Hy/uqGbhymvGUid0pMnKnhwXNxNQW6O6eRZKt+f58lMcBALGo
      ifJkF6OLBrnEQ+LCZoo/f9fHcDUl+gR3Oq7T2T1EdDFBMq0RKKzBJU4zF1PIxaPEHE7KA97V
      2xHLM5PXAcDmo6hSYnIkxuyDQUKNdXy2wLnB7O0PuTqqU1BSRnl5GW67iaZq2D1BKnwuJubm
      iMXn8TiL8Lrzt7e4keV3AIDi0mqy4+e5OlZGyybH536TZaQnS/PRfWzftpWqkhD2T3s5goO6
      hlJG+wYZHx8jUFuLM+/fqY0pzz/WbPjDheiXzqNU7OKLdXAylU1+Tv7iF9z3OHA4JWKZzy5q
      iQXVtIgdXJyt4IcHrRtj5Ku8DIAjEGbXnn047CDZi9n/2h9hOANLv/TV89YbBm4kvM0vcKJo
      npwh4PT6kG0qkmvpLGEiUxSxU+ppJZiX75IFrGK4J8plYgzcbqdzUODlPzhG+AndH1VVeedC
      H+Nz1t0k1zMrAE+Qy8R42PsQobiO+rLAE59jVYPmBysAT8kKQH6w5jYsG5o1vPsO/vbkbYan
      E6vdDMt3kJcBMDSF2bkonmAEr/PZ7eLAeNQqh17n8rILpKdjXLhwmtH5zGo3xbLG5eUZ4PMM
      XUPVdOyyA8EGhppFMe24ZBFNyaDbRPScgmaA7HLjsIvYTBNNVcgqOQxEHE4nsiRis+rh8k7e
      ByA12ce5exMcPHycAhcsdH/APyfb+JNDlQyd/l9cMavxJCaJp7P4K1s5/sJu3FqUrquX6R2f
      J6sJFNTu5Oi+JvwOa8Yn3+R9AL6Jr6SBF48ewWXEuXT2HHOLuwnG7xNzNfLWH9Viz81x9VQ7
      Q7FNbC958jUBy/qVtwEQbMLSHeG/9iqHk/LqSvwu0LNOvB4J04T5/pucvZHhzrWlT3wtZ2dP
      0/6VaLZlheVlAAxDR7bbccgyZH/7v5e8Yfa+eoTXWkusm2TkubyZBTIMg8VUEl3XGOvpIG4U
      EfTZEUWJnKKQzeVYnHvItVsPyGlff/E7UFrO7J1LDM9nMbQM43fvMZRMr9CeWFZS3pwBTC3L
      3dP/QPtglmBNK6++tp8ChwBFVewsGeS9n/w3hFAtO+uasQWX7ujuLixFX7qDEjZBwh8qwm2H
      guq9vJJt5/Qv/gfv5WQqmvZxrN7xNa9uWa+sWqCnZC2Omx+sADwlVVWZiafJadYCK+uZFYCn
      ZFWD5oe8GQRbLE8jbwbBq+HPf3qJ3tH5b36iZc3aAAFQmOwbIFuwiZqI5yufpSqzDN3PUtlc
      ybf9CnwqkyOeUpanmZZVsQG6QAojd27RP/X1391Vs1N0tT/Emu3fWDZAAD5HzzI9OUdWX5q5
      Mc00U8Nz5L70tMXoBHMp9dFPJsrCDDMLT3FJ2bLmbawA5Oa5fKad2eynB/cEF969QfxLT4uO
      dnLt5giKCZgKD9uv0zOVXOHGWlbCxgrAtxQub0RM9jOX1DFS8wyqLjZHfKvdLMszsEECICJJ
      3/7bLO5gEUU+menZKLH5eVyeIEGftTpcPsr/AGg6iunA57N/+7+RXNSVenkwNk0iNokzvAlr
      bdz8lJ//VkMlOjvFQtYkOX6PIdHLq0EvyCaF9gwPHw5juHVG+q4yQekTNiDgq6mj+MZprkad
      HH41vAE+KTam/AwABpnYBHe7x8BXygtHd1HotQMhWg83cfH6PW7avNRs288Rnw03IMmFbGn2
      PL4GYJPCNNfmGMjsp8RlfRk4X1m1QF/ByM5w4ZcXiJz4Ptt8v/n5b1WD5gcrAE+wGH3IqXdP
      Ie14lddbq574HKsYLj9YAXhKVgDygzW2s2xoeToIXhm3H0yRSH+5kMKynlgB+A5+fq7HGgSv
      c2u7C2SazA918OM//098MrDSB5pOOhYlra3wy1pW1JoOgAnMTY1T1lDJ+MMZ9G/8i+WUoev9
      d7i3sKIvallha7wLlGVmLEn14cPoJ28zpW2jXAItHaWzq5fyhj2UBuww18s7fTa+f7ABMBi/
      c4aPL3cT1yTKtzTSunMfVUGduzcuUrz9Fcp8kJm8x7kxO6/uqUeNDXDy12cYmM8SqNjBW8ea
      eXjlV5y82wtT/5lLkoc9b/2AgzXBb2yxZX1Z0wHQZ28xIu5gT1ElnroL3O5doKzZj6nlmJ+f
      oUB9tCKDkmB4RgB0ondP8WGPzGt/8m8pkXXO/+pvmE7vodKnEZ2ZwPeoElrPxBmfc4CR4Mb5
      Lgra3uREXYiFsSGSppe2V34XY1bFduJfs6dg1d4CyzO2hrtAGuN3BihoWbq7e0F1Hen7faS+
      dhWSRfrv59h3bB+lbglEGbfzm4rgZEIFdka72rnZOwaRair9v0XhnGVdW7NnADM7xa2+Sbo7
      /5o+CUxdQXVUMBXbRfVXHp8aCh58jt8i14KTzW2H8M/MMTX+gA9+doWtx77P7vLl2AvLWrdG
      A2CQGB4iWX+c//f4LgBMPcudS6eZmphmU7UEhklO09GVRaYnp1HUIsBNsStO99AsRdvKELJx
      5hM5AgC2pUG1qqloisL01AwZpRz0HAtJBW9RJbsqq6h2vseHYwvsLg9gt2vEklnMoIyBDVGw
      iuLyzdoMgK4wMpGksrT68UM2QaYkEmR4ehp9SwNlfoHLv/op11xeIo40mlEEOKl9bif3P/iY
      v283cXiKEBWTACDaHRQXeLj07t9y3e3DL6bQnOWATnyih1v3hljIGdidQdpeCgAOqnc20P7B
      3zPsDLDz+KvsKvevzvtheWbWZi2QaaDmVExRQpY+rbUxMTSNnG7ikO0YWo5MVlm6hZFdREPE
      47SjZhfJ5LSl2wKYOp1n/hlv2x/SWu5A1xQy2aXbHsl2EcMm4pYldF0lm1XQDRPB7sDtlBFs
      NkxDI7OYRjMFHG43DumzrpVVDZof1mYAvoPYwE2u3p9CsImYeposZTx/7DnC8vK+jqqqfHxj
      kOnY4vJu2LKi8i4AhpJiYmKCZEbDJjkpqdxEwCWy3L13qxo0P+RdAFaKFYD8sIavA1gsz97a
      nAVaJ/7LO+0MTHx5WS3LerKMATDRlSRjg4NMxbMIsotIRTWbivzL3v9+Gmp6lqmki8pi77Jt
      czqaYmjKCsB6tmxdIFPL0XfjPB0DM2imQSY+Sce1Lp5ujkRn5v4dbg/OLFfzyEbv09FrLWVu
      +aJlOwOoSoLh0ShNx35EfVjENHRyqs7S7KOBkowzv5DGFGRC4ULcsoCppZlP5BD0DBnVxOUL
      EfC50BfnedjXy5CcJmxXcfqChPxuzFyaeCyBottw+0P4vU5EQyWZyWLmsiTTCjaHl7DfTjKW
      IKuBL1yE3yWxdIZaZG5qAkW34QkW4Hc7EGwmei5DLBYnq4HLFyLkcyLYNBZiCi6/TDoWJWcP
      EAm4luvtsqwRyxYAUXLhdSr0dnVT2LqVAp+MU1zafC46zNUb3URTWVRNwVO0iyOHG/EsdPHT
      fxyifpODxXQGxV7Ac88fIpwY4N7DEaJikqsLU5Q07GJ3fYThjgv0T6dRVQ3TFWHvoX1sEuc5
      d/oiOdOJqWeJxRRKqsoQlCTpTALT9xyvn9gGhs7c0D2uZyVS6Sy6p5QXjuyn2Jnj/p0O7o9F
      UTQV1Qxw4PiLbArGuPR+F1WtMn13Jwg2HubFFisA+WbZAiDIHnbsO8qtGzf4p/95jkDNbl48
      uodSr8nw/Ql8m1s5VFsMygLtH79P/8wWdsngLa7j+ePbcYkqPVfOMTQ4QVVbG0fbFuiTt/Ba
      Wy0AmYU+xlIlvHiiBY+o8uDaOfpHptlUIyE6gzS27Keh1MvAJz+m3VHH7xytwilM8+FP7pJi
      Gy6bQLCikaPHtyEbSW6cPkP/2BzeYI65nJuDrx4iZNeZ6zzFJ32zbHpOgvQAXaO7ef74m5QE
      rYM/Hy1bAGw2AX9JHUfeqOOQushAxyf87797nz/+V4cZG7xH+7mrnJeX5swlTwEH1BzIIHsD
      eBwSIFFaUsjwVAL9CV/9Ukd6OXuph3vdZx8/VrmvEQDR7afA70YQRGS7gK8gjFsWMU0Hsv3R
      ZQ6bgMPjw2UXAD/V5X6uJxdJ2oa5+fE1rl+//HhAFNm9FfCCvZIjx9oosSaL89ayBcA0DUxT
      QBBAtHuof+55Ju68y0hWwuEq4YUf/j57q7/4zRIz+vkfdDIZBbsURHjCAWfzBGjcfYLf+952
      vrBS4cLYUzRWJZnUcHhlJMnP5ude4vBL+/DZP7/habA7kK2DP68t279XU+a4/OGH3BuaIh6P
      MdZzj36pkCqfl82bnHRevsrQTIx4dIb+O1cYenTw5xbjROMJZkd7uNE3SVF5JZJNxOURmRkf
      I5ZIkExnkQq34J67xo17I8TjUUZ6Ork7Ev36Rn2ODZNceoFYPMH4/U5uji5SXRohGC5Gneun
      o2+EeDzGxMNb3LhvzRZtFOLbb7/99nJsSBBk7EaM7ps3uHm3h8lsgCPHD1HmceAtqqJUnOXi
      hct09Y8iRRrZWh1Eyo5z9sxtJsf66R9fpHH/MZqrAog2G96CMNL8fc5cucuiFKKqooLqcj+D
      nVdov91HzFZAQ10lXjukNRvhggKcdgEtk4RAFaV+O2CQSWmEK4txaApTgz3c6uxkOCaw69BR
      tpR4kVwBqst9DN26xtXb3UynvTQ3b8Ynm2SSJpGqCE+qozMMg7Odw8zErbuKrWerWgtkRq/z
      v66H+eNXN69WE56aVQ6dH1a3FEJ0E/Itc53yCvqzHx3EMNfCdW7L07KqQZ+SVQ2aH6w5DsuG
      ZlWDfgcPxqOklZVdr86yvKwAfAd/d/K2NQhe59ZMAExDZebhHS5f7mA0ruApruPg8wdoKAt8
      ZTm1aWooaR3Z4/jGvlx6upNro8UcbXvSTfEsG9WaGQMsTt3h12fvs/noD/nTP/1/eH2Hl4vv
      n2T8a6fZh/jV/zjDt/kM1tU0iUVrLX/LF62RM4DO2J2bFO75AU2VQUSgpOE5jo//lAvd8/xR
      WxhDy9B3/RNu9s8iF9WzpzFMV8dpusajzP54goCrllf+6AUK1QQd507TNZrAEdnCKy8fJCQD
      GKSm+vnoFxeZTMts3XOY3fXF2G0m2eggF89fZyxpUtlygMMtVdjFBe5cGmfTziL6r5xnNrSH
      E62Vq/w+WZbbGglAkqkJmeoDAR5PKtpkKhtrSV4eR2kLMHnlfW6ma3npzYOYi3OojmJeeOUQ
      8eFBDvz+USI2Cbee5Napj5jwb+PE75SRHr7Or/75Im++dRDJ0MlkDLYceY1d6jTnL53D5TpO
      YyDDlY4Byne/SJs7w52zl7nsD3GkNsv4g4fMKv0QaOZAY8lqvkGWZ2SNBEAlpzhwOL7Y27fZ
      7QiahpGb4u4DJy/8i92USEA4BIBpunFIDrx+Pz5Am+ujR43wemsDAaeEGXyJuqG/YXBmL1sE
      O5GaampKCsD001o9SvdslFI1xuzEBGnTZBQwtRi9vRMcqQ2BMotY/j2ebwhjzfbnpzUSAB/B
      gnlm5wzqyz8blqRnptFD23FoGRYFD55vaK2Wy2GTJSTbp0ES8fpcLOZU+PyCujYRp8uOmTPI
      KSls9gjlFRVLNT8VFWwpKAMy4Kygud46+PPZGhkEO9myvZ7ey5eYSiqYhk46OsDpq7M811qL
      4C6mxjlD71gC1TBQlTQZRWMpvxkUxcA0DByBAjyLMUajKXTDILcwzuCUQSToBkxMw8AwTXKL
      M9wfWSAU9OPzFyA6dEKltTQ2bmVLTTlBt2OpWYKItR5uflsjZwDwbd5Dy8gnnHv/XURJQFN1
      PFsP01wI4Kdxfz2nLp9k1CYiewtobjtAbWGEsrIoZ37xc0LBGg69toP9TYWcPfdr7op2DF2l
      uPkYVUEb6iLEHl7n3fkONE1FLtrC4YowXpuTzYVDXDz5S2S7hGR3ULX9EAXWOrgbwtqpBTJN
      tFyGRDxBRtWRHB6CoQDORwvSmqZOOhElkVIQHB5CoSCyCLnFGNFEGlP0ECkJYTdUEtF5UlkN
      m+whUhjCLoCRWyQaS6KoGjbJgT8YwuOUsPG5L8WrJqLspqAggEPSWYgpuEPeJ35KWNWg+WHt
      BGCdUVWVdy70MT6XWu2mWL4DKwBPyaoGzQ9rZBBssawOKwCWDW3NzAKtR3978jbD04nVbobl
      O3h2AcglGR6bxBmppdi39DJ6NslMSiNSEERa4Ql2LRsnmnZQVLB8C1wNjEetWaB17tl1geKD
      fHTuFBcu9pN+NMzOzT/kTHsXWfVrb/b7TGTmurl8d/kW27Xkh2faBXJVPkdF7iKCfgwAAAgC
      SURBVDY9I1XsrvrysuQmuqqQzuQwbQKy04XTLmJoCooh4ZJFwMTQNVTNxC7b4dHN7DQD7A4X
      DllCMHUUTQNdQ1F1bKKMyyGQe/Q82eXBYV/KuaGrpFPJpcedLhx2CZtt6TWymSyaAZLDiUuW
      sNkMlIyO5BBRsxl0wYHnG2+6bVlvnu0YwCZTv20r1+93kyxp+0I5jpaa5salS9wbTyDYBHyl
      W3nxxedwT1zmn7oi/OiNZmQT5oduc2NQ58DB7czcvUjng0lSWQNP8WYOPr+XcmY5de4KOcVk
      IblAMudga30ZqelxoqkU/upjvH6sHkyNuQc3+XBGIZZScZVt5aXDbUQcKkPdHdzqHiaR1ZD9
      VRx9+TDlviinf95F7T4v9673Ite/yBttVjl0vnnmg+BgaRWee1cZmk+y5fGjGuM9PUzJNfzh
      v9iJy0jRdeY9LvZu5s3G7ZRd/oTRVDO1HpidHMFdfBBJHWcoGuDY948SkHL0XDlL7/A05ZsE
      EJzUtB2kpcrPg49/zDW9gu9//wgeYYoPfnKPJPW4EPCW1HP8lRacZoJrH5+lb3QOTyjH+IKd
      w2/9IWFZY6L9Iy73zfGDNgEyw9x9uJXWY79LVeHy3VjDsnY88wAIcoi2lgi/vDNARdOji0Z6
      lqm4QkVtJZ5Hi9XWbq+lv30KZXsz9ZvtdPdOUr1LZnTEYOv3Iuij7Zy/0sW93ssAGFqO0n1b
      ARm7L0xp2IcoSDgdIqHCUnwOCdN04ZQ/WxzXHQjhdYhghthcGaA9mWLBNkrn2Su0d1xbGhDp
      Obw7GoEAiBH2HN5LlVNaE3e5sSy/Zz8NahNwVTbTdPc92kcqHj9mFyCrfraigp5ZRHMEEbAR
      qtyC0PmA6YEssaI2yrwCWdlN/Z43+eHrTTi+6+K4aKQzBrLLjiB4qN17nCMv7cUrfWlxXNmD
      zzr489rKXAizuand08TC7ZtEVUBwUlXmpf/ObWYyGlpyjKuXhinfVoUd8AZKkO0zXDk1Rl1r
      JXZALqzFPn6ZO8NRdEMjOtxD92jst2iEia7l0HSThck+OgZjlBcVEggVsjjZQ9dIDMPQWZjq
      pfPBt19017K+PbszgOyj9HOrobvDdbS09JBacCEKIoWN+3hDuMq7P/4rMmKI1pe+x4EqNwCi
      J0B9cQGnForZEVrqNjn8Vbz2+gHOnPkZV2IaBdXbOXqkBiSdcCiILC59TjtD5US8n+6WnYKS
      QmRAdoQQp6/y3//q1wi+cg689AqNZT5EPLx5Qufjj37OX7ynECjdyvFXaoFFCksLsOZ98ptV
      DPeUrHLo/GAF4CmpqspMPE1OW/mLepblYwXgKVnl0PnBqga1bGhWNeh3MBVNWV2gdc4KwHfw
      V++0W4Pgde7ZBsA0Gb72C965Ogo2G+7wJvYdfoHmyuCKLzeSmevm1kSYA9uLV/aFLWvaMz8D
      pBSDbS/9iOPNhSxMdHPmo18yf/AER+ojKzoA0bJxZmKeFXxFy3qwYl0gm00gUN7E62/Bz967
      yVzNK0Qkk7nBm3TcHSYrBWneu5/NERc2Uyc+cZ+Ozl4WDA/1O1tpqAiizI/QefMOM2mJTU27
      adpcgiOXoH9sCj02Q//oDEJ4C/u3Bei/dYfJFDTse5GmMg9gsDg3xMWPbjObsVO7fQ/bqgux
      20yU+Bg32m8ztQhlDbvY01CGJKTovTlNeWOYoZvXiQa3c6TJWlo936zwLJANe8FWNnsGGI2C
      Ee3i/J1FanfsoaXaS9el04zGNRbnH3L+QieeTS3s2lqJoGZQFuN0tt/GUdnC7qYqJruu0T0e
      g1ySnhuX6Em52dG6A8/UZX72UTe+mmbatoe4d+omcQBdJxVLEqrdwY4tEXqunePB5AJaaobr
      HT24KhrZs72GhdsXuDmRBtIMdg3QeeM8o1qEurLgyr5VlhWxCoNgCa/fwaKmM3LnFllvPdGp
      cTBUctkFRifmMdPdSHVH2Ntc+jihqYlL9E0JNIammQQkNUrf0Cy7drhxlW1lx67tFPvs2AbP
      sVh4kJYtfkzTz4Nr7aiAJNop3tJCU90mMMuwxefpnZojkl1gfj6B6ZklB/g9aa53jbG3IgiZ
      ETLBt3i5pciaLchTq3AdYIGZSRGvN0dsfpHH69gKdqo2N1NT6iOXTmH3er/QOD0WJW4THldm
      Bqoa2V7zlANam4TbI6PrGko2RnrR9ni7tsg2DjdGln5wbmJXs3Xw57MV+9+apomuZpjru8ZE
      ZDcH/E7myl30CZXsbCvFIZpkMwqC5EAoLCE9Ocri5gbcgklONxELSimRElTvaKXYKaEpaXLI
      kEv+Vm0wTRNdiTM8kcJf48XjCuEKKWze1kqpT0JXM2R1OxAFUUK0aqHz2rMPQG6B/lsXYdKL
      oeXIaB5eeLERh81G6Y7DyO+c5texCF5ZQJf9tLRsJ1LZRMHDC5z6cBiX3U6wqoHm6npqgr/i
      /AcfEPA6wRAobtzNztC3a4aASWLkNqc+7ieXWSDrKONwZRF+wUm5e4ALn5wk6HGAqVNQt489
      6+/m9Zan8GxrgUyT1NwwI7NLN/qSnH6KSooIuGRstqVP5HRsksmZBDlTwB8upigcQBZMlFSM
      ialZsqZMuLiUQr8TLZ1gamqaVM7A4SmgpKQQj6Ayn8zi9flxSAKZ6DgpuZiIV8I0VaJTCXyl
      hYjZOOMT86QVBZvdTaS0jJBHxoaJll1gYnyalKJjdwcoKyvGI2vMTS4S+IqSaKsaND/8H0I/
      hSp+GnxEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='KPI Positive per Month 2' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='New death cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New positive cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New positive cases per month' width='192'>
      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
      /wVRQUkdcYqHGAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='New positive in months' width='192'>
      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
      Bxey1VvhX9r7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Positive Cases per month' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Positive cases' width='144'>
      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
    </thumbnail>
    <thumbnail height='192' name='States' width='192'>
      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
      BJDMNf8fqv/6qe4zN84AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='USA Covid-q9 Tracker' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
